{"version":3,"sources":["redux/operations/contactsOperations.js","redux/selectors/contactsSelectors.js","components/main/contacts/contactForm/notification/Notification.js","components/main/contacts/contactForm/ContactFormStyled.js","components/main/contacts/contactForm/ContactForm.js","components/main/contacts/filter/Filter.js","components/main/contacts/contactList/contactItem/ContactItem.js","components/main/contacts/contactList/ContactList.js","components/main/contacts/ContactsStyled.js","components/main/contacts/Contacts.js"],"names":["baseURL","getContacts","state","contacts","items","getFilter","filter","getLoadingStatus","loading","getFilteredContacts","createSelector","contact","name","toLowerCase","includes","Div","transition","div","Notification","showNotification","in","timeout","unmountOnExit","Form","styled","form","ContactForm","useState","number","setState","dispatch","useDispatch","inputHandler","e","target","value","prevState","onSubmit","preventDefault","find","setTimeout","getState","uid","auth","idToken","changeLoadingStatus","axios","post","then","response","addContact","id","data","catch","error","setError","finally","type","onChange","Filter","changeFilter","Li","li","ContactItem","data-id","onClick","delete","removeContact","removeContactOperation","dataset","ContactList","contactsToShow","useSelector","contactsSelectors","TransitionGroup","component","map","mountOnEnter","H1","h1","Contacts","useEffect","get","Object","keys","key","loadContacts","appear","length"],"mappings":"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","file":"static/js/ContactsPage.46408271.chunk.js","sourcesContent":["import axios from \"axios\";\r\nimport {addContact, loadContacts, removeContact, changeLoadingStatus, setError} from \"../reducers/contactsReducer\";\r\n\r\nconst baseURL = \"https://finalphonebook-default-rtdb.firebaseio.com\";\r\n\r\nexport const addContactOperation = contact => (dispatch, getState) => {\r\n    const uid = getState().auth.uid;\r\n    const idToken = getState().auth.idToken;\r\n    dispatch(changeLoadingStatus());\r\n    axios\r\n        .post(`${baseURL}/contacts/${uid}.json?auth=${idToken}`, {...contact})\r\n        .then(response => dispatch(addContact({...contact, id: response.data.name})))\r\n        .catch(error => dispatch(setError(error)))\r\n        .finally(() => dispatch(changeLoadingStatus()));\r\n};\r\n\r\nexport const loadContactsOperation = () => (dispatch, getState) => {\r\n    const uid = getState().auth.uid;\r\n    const idToken = getState().auth.idToken;\r\n    dispatch(changeLoadingStatus());\r\n    axios\r\n        .get(`${baseURL}/contacts/${uid}.json?auth=${idToken}`)\r\n        .then(response => {\r\n            if (response.data) {\r\n                const contacts = Object.keys(response.data).map(key => ({\r\n                    ...response.data[key],\r\n                    id: key,\r\n                }));\r\n                dispatch(loadContacts(contacts));\r\n            }\r\n        })\r\n        .catch(error => dispatch(setError(error)))\r\n        .finally(() => dispatch(changeLoadingStatus()));\r\n};\r\n\r\nexport const removeContactOperation = id => (dispatch, getState) => {\r\n    const uid = getState().auth.uid;\r\n    const idToken = getState().auth.idToken;\r\n    dispatch(changeLoadingStatus());\r\n    axios\r\n        .delete(`${baseURL}/contacts/${uid}/${id}.json?auth=${idToken}`)\r\n        .then(() => dispatch(removeContact(id)))\r\n        .catch(error => dispatch(setError(error)))\r\n        .finally(() => dispatch(changeLoadingStatus()));\r\n};\r\n","import {createSelector} from \"@reduxjs/toolkit\";\r\n\r\nconst getContacts = state => state.contacts.items;\r\n\r\nconst getLoadingStatus = state => state.contacts.loading;\r\n\r\nconst getFilter = state => state.contacts.filter;\r\n\r\nconst getFilteredContacts = createSelector([getFilter, getContacts], (filter, contacts) => {\r\n    return contacts.filter(contact => contact.name.toLowerCase().includes(filter.toLowerCase()));\r\n});\r\n\r\nexport default {getContacts, getLoadingStatus, getFilter, getFilteredContacts};\r\n","import transition from \"styled-transition-group\";\r\n\r\nconst Div = transition.div`\r\n    position: absolute;\r\n    top: 26px;\r\n    left: 70px;\r\n    box-shadow: 0px 0px 4px 0px rgba(0, 0, 0, 0.2);\r\n    border-radius: 6px;\r\n    background-color: hotpink;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: space-around;\r\n    width: 200px;\r\n    height: 50px;\r\n    vertical-align: center;\r\n\r\n\r\n    &:enter {\r\n        transform: translateX(-150%);\r\n    }\r\n    &:enter-active {\r\n        transform: translateX(0);\r\n        transition: transform 250ms;\r\n    }\r\n    &:exit {\r\n        transform: translateX(0);\r\n    }\r\n    &:exit-active {\r\n        transform: translateX(-150%);\r\n        transition: transform 250ms;\r\n    }\r\n`;\r\n\r\nconst Notification = ({showNotification}) => (\r\n    <Div in={showNotification} timeout={250} unmountOnExit>\r\n        Contact already exists!\r\n    </Div>\r\n);\r\n\r\nexport default Notification;\r\n","import styled from \"styled-components\";\r\n\r\nconst Form = styled.form`\r\n    width: 100%;\r\n    box-shadow: 0px 0px 4px 0px rgba(0, 0, 0, 0.2);\r\n    padding: 25px;\r\n\r\n    label {\r\n        display: block;\r\n    }\r\n\r\n    input {\r\n        display: block;\r\n        width: 100%;\r\n        height: 26px;\r\n    }\r\n\r\n    button {\r\n        width: 100%;\r\n        height: 26px;\r\n        margin-top: 10px;\r\n        background-color: honeydew;\r\n    }\r\n\r\n    button:hover,\r\n    button:focus {\r\n        background-color: lightgreen;\r\n    }\r\n`;\r\n\r\nexport default Form;\r\n","import React, {useState} from \"react\";\r\nimport {useDispatch} from \"react-redux\";\r\nimport Notification from \"./notification/Notification\";\r\nimport {addContactOperation} from \"../../../../redux/operations/contactsOperations\";\r\nimport Form from \"./ContactFormStyled\";\r\n\r\nconst ContactForm = ({contacts}) => {\r\n    const [state, setState] = useState({\r\n        name: \"\",\r\n        number: \"\",\r\n        showNotification: false,\r\n    });\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const contactExists = () => {\r\n        setState(prevState => ({\r\n            ...prevState,\r\n            showNotification: true,\r\n        }));\r\n        setTimeout(() => {\r\n            setState(prevState => ({\r\n                ...prevState,\r\n                showNotification: false,\r\n            }));\r\n        }, 4000);\r\n    };\r\n\r\n    const inputHandler = e => {\r\n        const {name, value} = e.target;\r\n        setState(prevState => ({\r\n            ...prevState,\r\n            [name]: value,\r\n        }));\r\n    };\r\n\r\n    const submitHandler = e => {\r\n        e.preventDefault();\r\n        if (contacts.find(contact => contact.name === state.name)) {\r\n            contactExists();\r\n        } else {\r\n            dispatch(addContactOperation({name: state.name, number: state.number}));\r\n            setState({name: \"\", number: \"\", showNotification: false});\r\n        }\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <Form onSubmit={submitHandler}>\r\n                <label>\r\n                    Name\r\n                    <input type=\"text\" value={state.name} name=\"name\" onChange={inputHandler} />\r\n                </label>\r\n                <label>\r\n                    Number\r\n                    <input type=\"text\" value={state.number} name=\"number\" onChange={inputHandler} />\r\n                </label>\r\n                <button type=\"submit\">Add contact</button>\r\n            </Form>\r\n            <Notification showNotification={state.showNotification} />\r\n        </>\r\n    );\r\n};\r\n\r\nexport default ContactForm;\r\n","import React, {useState} from \"react\";\r\nimport {useDispatch} from \"react-redux\";\r\nimport styled from \"styled-components\";\r\nimport {changeFilter} from \"../../../../redux/reducers/contactsReducer\";\r\n\r\nconst Div = styled.div`\r\n    width: 100%;\r\n    box-shadow: 0px 0px 4px 0px rgba(0, 0, 0, 0.2);\r\n    padding: 25px;\r\n\r\n    label {\r\n        display: block;\r\n    }\r\n\r\n    input {\r\n        display: block;\r\n        width: 100%;\r\n        height: 26px;\r\n    }\r\n`;\r\n\r\nconst Filter = () => {\r\n    const [state, setState] = useState({\r\n        value: \"\",\r\n    });\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const inputHandler = e => {\r\n        setState({value: e.target.value});\r\n        dispatch(changeFilter(e.target.value));\r\n    };\r\n\r\n    return (\r\n        <Div>\r\n            <label>\r\n                Find contacts by name\r\n                <input type=\"text\" value={state.value} name=\"filter\" onChange={inputHandler} />\r\n            </label>\r\n        </Div>\r\n    );\r\n};\r\n\r\nexport default Filter;\r\n","import {useDispatch} from \"react-redux\";\r\nimport {removeContactOperation} from \"../../../../../redux/operations/contactsOperations\";\r\nimport transition from \"styled-transition-group\";\r\n\r\nconst Li = transition.li`\r\n    width: 100%;\r\n    box-shadow: 0px 0px 4px 0px rgba(0, 0, 0, 0.2);\r\n    padding: 16px;\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n\r\n    &:enter {\r\n        transform: translateX(-120%);\r\n    }\r\n    &:enter-active {\r\n        transform: translateX(0);\r\n        transition: transform 250ms;\r\n    }\r\n    &:exit {\r\n        transform: translateX(0);\r\n    }\r\n    &:exit-active {\r\n        transform: translateX(-120%);\r\n        transition: transform 250ms;\r\n    }\r\n\r\n    button {\r\n        background-color: hotpink;\r\n        font-weight: 700;\r\n        width: 30px;\r\n        height: 30px;\r\n\r\n        :hover,\r\n        :focus {\r\n            background-color: red;\r\n        }\r\n    }\r\n`;\r\n\r\nconst ContactItem = ({name, number, id}) => {\r\n    const dispatch = useDispatch();\r\n\r\n    const removeContactHandler = e => {\r\n        dispatch(removeContactOperation(e.target.dataset.id));\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <p>{name}</p>\r\n            <p>{number}</p>\r\n            <button type=\"button\" data-id={id} onClick={removeContactHandler}>\r\n                &#x2715;\r\n            </button>\r\n        </>\r\n    );\r\n};\r\n\r\nexport {ContactItem, Li};\r\n","import {TransitionGroup} from \"react-transition-group\";\r\nimport {useSelector} from \"react-redux\";\r\nimport contactsSelectors from \"../../../../redux/selectors/contactsSelectors\";\r\nimport {ContactItem, Li} from \"./contactItem/ContactItem\";\r\n\r\nconst ContactList = () => {\r\n    const contactsToShow = useSelector(contactsSelectors.getFilteredContacts);\r\n\r\n    return (\r\n        <TransitionGroup component=\"ul\">\r\n            {contactsToShow.map(contact => (\r\n                <Li key={contact.id} timeout={1000} mountOnEnter unmountOnExit>\r\n                    <ContactItem {...contact} />\r\n                </Li>\r\n            ))}\r\n        </TransitionGroup>\r\n    );\r\n};\r\n\r\nexport default ContactList;\r\n","import styled from \"styled-components\";\r\nimport transition from \"styled-transition-group\";\r\n\r\nconst Div = styled.div`\r\n    width: 300px;\r\n    margin-left: 25px;\r\n\r\n    h2 {\r\n        margin-top: 10px;\r\n        text-align: center;\r\n    }\r\n`;\r\n\r\nconst H1 = transition.h1`\r\n    text-align: center;\r\n\r\n    &:appear {\r\n        transform: translateX(-100%);\r\n    }\r\n    &:appear-active {\r\n        transform: translateX(0);\r\n        transition: transform 500ms;\r\n    }\r\n`;\r\n\r\nexport {Div, H1};\r\n","import React, {useEffect} from \"react\";\r\nimport {useSelector, useDispatch} from \"react-redux\";\r\nimport {loadContactsOperation} from \"../../../redux/operations/contactsOperations\";\r\nimport contactsSelectors from \"../../../redux/selectors/contactsSelectors\";\r\nimport ContactForm from \"./contactForm/ContactForm\";\r\nimport Filter from \"./filter/Filter\";\r\nimport ContactList from \"./contactList/ContactList\";\r\nimport {Div, H1} from \"./ContactsStyled\";\r\n\r\nconst Contacts = () => {\r\n    const contacts = useSelector(contactsSelectors.getContacts);\r\n    const loading = useSelector(contactsSelectors.getLoadingStatus);\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        dispatch(loadContactsOperation());\r\n    }, []);\r\n\r\n    return (\r\n        <Div>\r\n            <H1 in={true} appear timeout={500}>\r\n                {loading ? \"Loading...\" : \"Phonebook\"}\r\n            </H1>\r\n            <ContactForm contacts={contacts} />\r\n            {contacts.length > 0 && (\r\n                <>\r\n                    <h2>Contacts</h2>\r\n                    <Filter />\r\n                </>\r\n            )}\r\n            <ContactList />\r\n        </Div>\r\n    );\r\n};\r\n\r\nexport default Contacts;\r\n"],"sourceRoot":""}