{"version":3,"sources":["redux/operations/authOperations.js","components/main/auth/Auth.js"],"names":["baseURL","apiKey","Form","styled","form","Auth","useState","email","password","state","setState","location","useLocation","dispatch","useDispatch","inputHandler","e","target","name","value","prevState","onSubmit","data","preventDefault","pathname","changeLoadingStatus","axios","post","returnSecureToken","then","response","signIn","catch","error","setError","finally","signInOperation","type","onChange"],"mappings":"sNAGMA,EAAU,4CACVC,EAAS,0C,qiBCEf,IAAMC,EAAOC,IAAOC,KAAV,KAqEKC,UAxCF,WAAO,IAAD,EACWC,mBAAS,CAC/BC,MAAO,GACPC,SAAU,KAHC,mBACRC,EADQ,KACDC,EADC,KAMTC,EAAWC,cACXC,EAAWC,cAEXC,EAAe,SAAAC,GAAM,IAAD,EACAA,EAAEC,OAAjBC,EADe,EACfA,KAAMC,EADS,EACTA,MACbT,GAAS,SAAAU,GAAS,kCACXA,GADW,kBAEbF,EAAOC,QAYhB,OACI,eAACjB,EAAD,CAAMmB,SATY,SAAAL,GD9CK,IAAAM,EC+CvBN,EAAEO,iBACwB,cAAtBZ,EAASa,SACTX,GDjDmBS,ECiDMb,EDjDE,SAAAI,GACnCA,EAASY,eACTC,IACKC,KADL,UACa3B,EADb,gCAC4CC,GAD5C,2BAC0DqB,GAD1D,IACgEM,mBAAmB,KAC9EC,MAAK,SAAAC,GAAQ,OAAIjB,EAASkB,YAAOD,EAASR,UAC1CU,OAAM,SAAAC,GAAK,OAAIpB,EAASqB,YAASD,OACjCE,SAAQ,kBAAMtB,EAASY,qBC4CjBZ,EDzCgB,SAAAS,GAAI,OAAI,SAAAT,GACnCA,EAASY,eACTC,IACKC,KADL,UACa3B,EADb,4CACwDC,GADxD,2BACsEqB,GADtE,IAC4EM,mBAAmB,KAC1FC,MAAK,SAAAC,GAAQ,OAAIjB,EAASkB,YAAOD,EAASR,UAC1CU,OAAM,SAAAC,GAAK,OAAIpB,EAASqB,YAASD,OACjCE,SAAQ,kBAAMtB,EAASY,mBCmCRW,CAAgB3B,IAChCC,EAAS,CAACH,MAAO,GAAIC,SAAU,MAI/B,UACI,0CAEI,uBAAO6B,KAAK,OAAOlB,MAAOV,EAAMF,MAAOW,KAAK,QAAQoB,SAAUvB,OAElE,6CAEI,uBAAOsB,KAAK,OAAOlB,MAAOV,EAAMD,SAAUU,KAAK,WAAWoB,SAAUvB,OAExE,wBAAQsB,KAAK,SAAb,SAA6C,cAAtB1B,EAASa,SAA2B,SAAW","file":"static/js/LoginPage.1afb9b8d.chunk.js","sourcesContent":["import {signIn, changeLoadingStatus, setError} from \"../reducers/authReducer\";\r\nimport axios from \"axios\";\r\n\r\nconst baseURL = \"https://identitytoolkit.googleapis.com/v1\";\r\nconst apiKey = \"AIzaSyDohlpLjI8jw0GUGaYJFlhb02jgBwdhXC4\";\r\n\r\nexport const signUpOperation = data => dispatch => {\r\n    dispatch(changeLoadingStatus());\r\n    axios\r\n        .post(`${baseURL}/accounts:signUp?key=${apiKey}`, {...data, returnSecureToken: true})\r\n        .then(response => dispatch(signIn(response.data)))\r\n        .catch(error => dispatch(setError(error)))\r\n        .finally(() => dispatch(changeLoadingStatus()));\r\n};\r\n\r\nexport const signInOperation = data => dispatch => {\r\n    dispatch(changeLoadingStatus());\r\n    axios\r\n        .post(`${baseURL}/accounts:signInWithPassword?key=${apiKey}`, {...data, returnSecureToken: true})\r\n        .then(response => dispatch(signIn(response.data)))\r\n        .catch(error => dispatch(setError(error)))\r\n        .finally(() => dispatch(changeLoadingStatus()));\r\n};\r\n","import {useState} from \"react\";\r\nimport {useLocation} from \"react-router-dom\";\r\nimport {useDispatch} from \"react-redux\";\r\nimport styled from \"styled-components\";\r\nimport {signUpOperation, signInOperation} from \"../../../redux/operations/authOperations\";\r\n\r\nconst Form = styled.form`\r\n    width: 300px;\r\n    box-shadow: 0px 0px 4px 0px rgba(0, 0, 0, 0.2);\r\n    padding: 25px;\r\n    margin: 25px 0 0 25px;\r\n\r\n    label {\r\n        display: block;\r\n    }\r\n\r\n    input {\r\n        display: block;\r\n        width: 100%;\r\n        height: 26px;\r\n    }\r\n\r\n    button {\r\n        width: 100%;\r\n        height: 26px;\r\n        margin-top: 10px;\r\n        background-color: honeydew;\r\n    }\r\n\r\n    button:hover,\r\n    button:focus {\r\n        background-color: lightgreen;\r\n    }\r\n`;\r\n\r\nconst Auth = () => {\r\n    const [state, setState] = useState({\r\n        email: \"\",\r\n        password: \"\",\r\n    });\r\n\r\n    const location = useLocation();\r\n    const dispatch = useDispatch();\r\n\r\n    const inputHandler = e => {\r\n        const {name, value} = e.target;\r\n        setState(prevState => ({\r\n            ...prevState,\r\n            [name]: value,\r\n        }));\r\n    };\r\n\r\n    const submitHandler = e => {\r\n        e.preventDefault();\r\n        if (location.pathname === \"/register\") {\r\n            dispatch(signUpOperation(state));\r\n        } else dispatch(signInOperation(state));\r\n        setState({email: \"\", password: \"\"});\r\n    };\r\n\r\n    return (\r\n        <Form onSubmit={submitHandler}>\r\n            <label>\r\n                Email\r\n                <input type=\"text\" value={state.email} name=\"email\" onChange={inputHandler} />\r\n            </label>\r\n            <label>\r\n                Password\r\n                <input type=\"text\" value={state.password} name=\"password\" onChange={inputHandler} />\r\n            </label>\r\n            <button type=\"submit\">{location.pathname === \"/register\" ? \"SignUp\" : \"SignIn\"}</button>\r\n        </Form>\r\n    );\r\n};\r\n\r\nexport default Auth;\r\n"],"sourceRoot":""}